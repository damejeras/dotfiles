#!/bin/bash

if [ $# -eq 0 ]; then
  if [ -z "$TMUX" ]; then
    ZOXIDE_RESULT=$(zoxide query -l | fzf --reverse)
  else
    ZOXIDE_RESULT=$(zoxide query -l | fzf-tmux -p --reverse)
  fi
else
  ZOXIDE_RESULT=$(zoxide query $1)
fi

if [ -z "$ZOXIDE_RESULT" ]; then
  exit 0
fi

FOLDER=$(basename $ZOXIDE_RESULT)
SESSION_NAME=$(echo $FOLDER | tr ' ' '_' | tr '.' '_')

# lookup tmux session name
SESSION=$(tmux list-sessions 2> /dev/null | grep $SESSION_NAME | awk '{print $1}')
SESSION=${SESSION//:/}

# if not currently in tmux
if [ -z "$TMUX" ]; then
  # tmux is not active
  if [ -z "$SESSION" ]; then
    # session does not exist
    # jump to directory
    cd $ZOXIDE_RESULT
    # create session
    tmux new-session -s $SESSION_NAME
  else
    # session exists
    # attach to session
    tmux attach -t $SESSION
  fi
else
  # get current session name
  CURRENT_SESSION=$(tmux display-message -p '#S')
  # tmux is active
  if [ -z "$SESSION" ]; then
    # session does not exist
    # jump to directory
    cd $ZOXIDE_RESULT
    # create session
    tmux new-session -d -s $SESSION_NAME
    # set current session as last
    tmux set-env -t $SESSION_NAME LAST_TMUX_SESSION $CURRENT_SESSION
    # attach to session
    tmux switch-client -t $SESSION_NAME
  else
    # session exists
    # set current session as last
    tmux set-env -t $SESSION LAST_TMUX_SESSION $CURRENT_SESSION
    # attach to session
    # switch to tmux session
    tmux switch-client -t $SESSION
  fi
fi

